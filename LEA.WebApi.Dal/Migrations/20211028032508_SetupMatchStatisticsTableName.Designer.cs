// <auto-generated />
using System;
using LEA.WebApi.Dal;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace LEA.WebApi.Dal.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20211028032508_SetupMatchStatisticsTableName")]
    partial class SetupMatchStatisticsTableName
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.11")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("LEA.WebApi.Domain.Models.League", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Coutry")
                        .HasColumnType("int");

                    b.Property<DateTime>("Creation")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2021, 10, 28, 0, 25, 7, 963, DateTimeKind.Local).AddTicks(3515));

                    b.Property<short>("Division")
                        .HasColumnType("smallint");

                    b.Property<string>("Name")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Shield")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.ToTable("Leagues");
                });

            modelBuilder.Entity("LEA.WebApi.Domain.Models.Match", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AwayId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<DateTime>("Creation")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2021, 10, 28, 0, 25, 7, 968, DateTimeKind.Local).AddTicks(5580));

                    b.Property<int?>("HomeId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int>("RefereeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Schedule")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AwayId")
                        .IsUnique();

                    b.HasIndex("HomeId")
                        .IsUnique();

                    b.HasIndex("RefereeId");

                    b.ToTable("Matches");
                });

            modelBuilder.Entity("LEA.WebApi.Domain.Models.MatchStatistics", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<short>("Corners")
                        .HasColumnType("smallint");

                    b.Property<DateTime>("Creation")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2021, 10, 28, 0, 25, 7, 968, DateTimeKind.Local).AddTicks(6345));

                    b.Property<short>("Fouls")
                        .HasColumnType("smallint");

                    b.Property<short>("GoalsFullTime")
                        .HasColumnType("smallint");

                    b.Property<short>("GoalsHalfTime")
                        .HasColumnType("smallint");

                    b.Property<int>("MatchId")
                        .HasColumnType("int");

                    b.Property<short>("Offside")
                        .HasColumnType("smallint");

                    b.Property<short>("Red")
                        .HasColumnType("smallint");

                    b.Property<int>("ResultFullTime")
                        .HasColumnType("int");

                    b.Property<int>("ResultHalfTime")
                        .HasColumnType("int");

                    b.Property<short>("Shots")
                        .HasColumnType("smallint");

                    b.Property<short>("ShotsOnTarget")
                        .HasColumnType("smallint");

                    b.Property<int>("TeamId")
                        .HasColumnType("int");

                    b.Property<short>("Woodwork")
                        .HasColumnType("smallint");

                    b.Property<short>("Yellow")
                        .HasColumnType("smallint");

                    b.HasKey("Id");

                    b.HasIndex("MatchId");

                    b.HasIndex("TeamId");

                    b.ToTable("MatchesStatistics");
                });

            modelBuilder.Entity("LEA.WebApi.Domain.Models.Referee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Creation")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2021, 10, 28, 0, 25, 7, 968, DateTimeKind.Local).AddTicks(6617));

                    b.Property<string>("Name")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id");

                    b.ToTable("Referees");
                });

            modelBuilder.Entity("LEA.WebApi.Domain.Models.Team", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Creation")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2021, 10, 28, 0, 25, 7, 968, DateTimeKind.Local).AddTicks(6801));

                    b.Property<int>("LeagueId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Shield")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("LeagueId");

                    b.ToTable("Teams");
                });

            modelBuilder.Entity("LEA.WebApi.Domain.Models.Match", b =>
                {
                    b.HasOne("LEA.WebApi.Domain.Models.MatchStatistics", "Away")
                        .WithOne()
                        .HasForeignKey("LEA.WebApi.Domain.Models.Match", "AwayId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("LEA.WebApi.Domain.Models.MatchStatistics", "Home")
                        .WithOne()
                        .HasForeignKey("LEA.WebApi.Domain.Models.Match", "HomeId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("LEA.WebApi.Domain.Models.Referee", "Referee")
                        .WithMany("Matches")
                        .HasForeignKey("RefereeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Away");

                    b.Navigation("Home");

                    b.Navigation("Referee");
                });

            modelBuilder.Entity("LEA.WebApi.Domain.Models.MatchStatistics", b =>
                {
                    b.HasOne("LEA.WebApi.Domain.Models.Match", "Match")
                        .WithMany()
                        .HasForeignKey("MatchId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LEA.WebApi.Domain.Models.Team", "Team")
                        .WithMany("MatchStatsList")
                        .HasForeignKey("TeamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Match");

                    b.Navigation("Team");
                });

            modelBuilder.Entity("LEA.WebApi.Domain.Models.Team", b =>
                {
                    b.HasOne("LEA.WebApi.Domain.Models.League", "League")
                        .WithMany("Teams")
                        .HasForeignKey("LeagueId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("League");
                });

            modelBuilder.Entity("LEA.WebApi.Domain.Models.League", b =>
                {
                    b.Navigation("Teams");
                });

            modelBuilder.Entity("LEA.WebApi.Domain.Models.Referee", b =>
                {
                    b.Navigation("Matches");
                });

            modelBuilder.Entity("LEA.WebApi.Domain.Models.Team", b =>
                {
                    b.Navigation("MatchStatsList");
                });
#pragma warning restore 612, 618
        }
    }
}
